/*
Implementing Merge Sort
https://course.acciojob.com/idle?question=d13a53f3-b01e-4808-b2f4-6a078e1b36cc
*/
import java.util.*;
import java.io.*;

class Solution {
	static void mergeSort(int[] arr,int l,int r){
	     if(l < r){
			 int mid = l + (r-l)/2;
			 mergeSort(arr, l, mid);
			 mergeSort(arr,mid+1,r);
			 merge(arr,l,mid,r);
		 }
	}

	private static void merge(int[] arr, int l, int mid, int r){
		int n = r-l+1;
		int []ans = new int[n];
		int i = l;
		int j = mid+1;
		int k = 0;
		while(i <= mid && j <= r){
			if(arr[i] <= arr[j]){
				ans[k++] = arr[i++];
			}
			else{
				ans[k++] = arr[j++];
			}
		}
		while(i <= mid){
			ans[k++] = arr[i++];
		}
		while(j <= r){
			ans[k++] = arr[j++];
		}
		// Copying to the Original Array:
		int position = 0;
		for(int m = l; m <= r; m++){
			arr[m] = ans[position++];
		}
	}
}
public class Main {
    public static void main(String args[]) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        int[] a=new int[n];
        for(int i= 0; i < n; i++)
            a[i] = input.nextInt();
        Solution Obj = new Solution();
        Obj.mergeSort(a,0,n-1);
        for (int i = 0; i < n; i++)
            System.out.print(a[i] + " ");
    }
}