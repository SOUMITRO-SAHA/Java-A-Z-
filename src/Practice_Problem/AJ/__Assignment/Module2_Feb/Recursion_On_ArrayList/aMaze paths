/*
aMaze paths
https://course.acciojob.com/idle?question=bb073cbd-0873-4607-824f-35edc0041c02
 */
import java.io.*;
public class Main {
    public static void aMazePaths(int row, int col, String psf, int r, int c){
        // Base Case:
        if (r == row && c == col) {
            System.out.println(psf);
            return;
        }

        // Recursive Call:
        // Condition:
        if (r == row) {
            // Only Horizontal Call:
            aMazePaths(row, col,psf+'h', r, c +1);
        } else if (c == col) {
            // Only Vertical Call:
            aMazePaths(row, col,psf+'v', r +1, c);
        }
        else{
            // First, Horizontal Call
            aMazePaths(row, col,psf+'h', r, c +1);

            // Second, Vertical Call
            aMazePaths(row, col,psf+'v', r +1, c);
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] inputLine;
        inputLine = br.readLine().trim().split(" ");
        int n = Integer.parseInt(inputLine[0]);
        inputLine = br.readLine().trim().split(" ");
        int m = Integer.parseInt(inputLine[0]);
        aMazePaths(n, m, "",1,1);
    }
}