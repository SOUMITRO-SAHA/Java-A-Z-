/*
Rearrange Even Odd Nodes
https://course.acciojob.com/idle?question=120fb058-e4aa-4c50-8fd9-1bc34055d0de
 */
import java.util.*;

class Node {
    int val;
    Node next;

    Node(int d) {
        val = d;
        next = null;
    }
}

class LinkedList {
    Node head, tail;

    void push(Node new_node) {
        if (head == null && tail == null) {
            head = tail = new_node;
            return;
        }
        tail.next = new_node;
        tail = new_node;
    }

    void printList(Node head) {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.val + " ");
            temp = temp.next;
        }
        System.out.println();
    }
}

class Solution {
    public Node rearrangeList(Node head) {
        Node dummyEven = new Node(-1);
        Node last1 = dummyEven;
        Node dummyOdd = new Node(-1);
        Node last2 = dummyOdd;
        Node temp = head;
        while (temp != null) {
            // Adding Even numbers to the dummyEven
            if (temp.val % 2 == 0) {
                last1.next = temp;
                last1 = temp;
            }
            // Adding Odd numbers to the dummyOdd
            else {
                last2.next = temp;
                last2 = temp;
            }
            temp = temp.next;
        }

        // Removing the Last references:
        last2.next = null;

        // Merging the Even and Odd
        last1.next = dummyOdd.next;

        // Returning
        return dummyEven.next;
    }

}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList llist = new LinkedList();
        int h1 = sc.nextInt();
        Node head = new Node(h1);
        llist.push(head);
        for (int i = 1; i < n; i++) {
            int data = sc.nextInt();
            llist.push(new Node(data));
        }
        llist.printList(head);
        Solution Obj = new Solution();
        head = Obj.rearrangeList(head);
        llist.printList(head);
        sc.close();
    }
}