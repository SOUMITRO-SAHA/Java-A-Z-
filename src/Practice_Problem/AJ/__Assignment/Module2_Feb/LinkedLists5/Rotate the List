/*
Rotate the List
https://course.acciojob.com/idle?question=87e0d4e3-e18e-46bd-bccf-7c3409344674
*/
import java.io.*;
import java.util.*;

class Node{
    int data;
    Node next;
    Node(int data){
        this.data = data;
        next = null;
    }
}
class LinkedList{
    Node head;
    void add(int data ){
        Node new_node = new Node(data);
        if(head == null){
            head = new_node;
            return;
        }
        Node current = head;
        while(current.next !=null){
            current = current.next;
        }
        current.next = new_node;
    }
}

class Solution {
    static int size(Node head){
		Node temp = head;
		int n = 0;
		while(temp != null){
			n++;
			temp = temp.next;
		}
		return n;
	}
	static void printLL(Node head){
		Node temp = head;
		while(temp != null){
			System.out.print(temp.data+" ");
			temp = temp.next;
		}
		System.out.println();
	}
    static void rotateRight(Node head, int k) {
	    int len = size(head);
		k %= len;
		if(k != 0){
			Node curr = head;
			Node prev = null;
			for(int i=0; i<(len - k); i++){
				prev = curr;
				curr = curr.next;
			}
			prev.next = null;
			Node t = curr;
			while(t.next != null){
				t = t.next;
			}
			t.next = head;
			head = curr;
		}

		// Print the LL:
		printLL(head);
    }
}
public class Main {

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList l1= new LinkedList();
        for(int i=0;i<n;i++){
            l1.add(sc.nextInt());
        }
        Solution Ob = new Solution();
        int k = sc.nextInt();
        Ob.rotateRight(l1.head, k);
    }
}