/*
Insert node at a specific position in a linked-list
https://course.acciojob.com/idle?question=360a3653-9861-453b-ae65-564bdb579674
 */
import java.util.*;

class Node{
    int data;
    Node next;
    Node(int data){
        this.data = data;
        next = null;
    }
}

class LinkedList{
    Node head;
    // Methods:
    void add(int data ){
        Node node = new Node(data);
        if(head == null){
            head = node;
            return;
        }
        Node current = head;
        while(current.next !=null){
            current = current.next;
        }
        current.next = node;
    }
}

class Solution {
    static Node insert(Node head, int n, int pos, int val) {
        // Creating the current Node:
        Node node = new Node(val);

        // Finding the node before the position.
        Node temp = head;
        for (int i = 0; i < pos-1; i++) {
            temp = temp.next;
        } // Reached the Node before the Current Position.

        // Updating the node
        // Edge Case:
        if(pos == 0){ // That means it is head.
            node.next = temp;
            head = node;
        }else{
            node.next = temp.next;
            temp.next = node;
        }

        // Returning the Head
        return head;
    }
}

public class Main {
    public static void main(String []args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList list = new LinkedList();
        for (int i = 0; i < n; i++) {
            list.add(sc.nextInt());
        }
        int val = sc.nextInt();
        int pos = sc.nextInt();
        Node head = Solution.insert(list.head, n, pos, val);
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
    }
}